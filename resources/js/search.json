[[{"l":"Getting Started","p":["CMS Potion is a new an exciting developer-focused CMS."]}],[{"l":"Permissions","p":["Each role can define a set of default permisions, these permissions are assigned to the user when assigned the role in the CMS. There are two properties for defined in the json for each role, include and exclude.","The include propert sets the initial set of permissions allowed for the user. The exclude property is used to exclude specific posts or types from the properties defined in include.","A good use case for the exclude property could be; giving a visitor permissions for view_posts, but having view_posts_locked in the exclude property. locked would be a post type that is only visible when logged in, so while it is excluded in the guest role, you would not exclude it in the registered role."]},{"l":"Permissions List","p":["edit_collections_type: User can edit specific collection type","edit_collections: User can edit all collection types","edit_options_id: User can edit specific options page","edit_options: User can edit all options pages","edit_parts_type: User can edit specific part type","edit_parts: User can edit all parts","edit_posts_id: User can edit specific post id","edit_posts_type: User can edit specific post type","edit_posts: User can edit all post types","edit_users: User can edit all users","publish_code: User can publish code assets from staging to production","publish_collections_type: User can publish specific collection type","publish_collections: User can publish all collection types","publish_options_id: User can publish specific options page","publish_options: User can publish all options pages","publish_parts_type: User can publish specific part type","publish_parts: User can publish all parts","publish_posts_id: User can publish specific post id","publish_posts_type: User can publish specific post type","publish_posts: User can publish all post types","view_archives_type: User can view archives for specific post type","view_archives: User can view all archives","view_collections_type: User can view specific collection type","view_collections: User can view all collection types","view_parts_type: User can view specific part type","view_parts: User can view all parts","view_posts_id: User can view specific post id","view_posts_type: User can view specific post type","view_posts: User can view all post types","view_sections_type: User can view specific section types","view_sections: User can view all sections"]}],[{"i":"user-class-variables-functions-and-methods","l":"User Class Variables, Functions, and Methods"},{"l":"Variables","p":["**$cms->user->role (string)** The current user role","**$cms->user->permissions (array)** All permissions granted to current user","**$cms->user->id (integer)** User's id if logged in, false if not logged in","For users that are logged in:","**$cms->user->first (string)** User's first name","**$cms->user->last (string)** User's last name","**$cms->user->name (string)** User's publicly visible name (defaults to first + last name)","**$cms->user->email (string)** User's email address","**$cms->user->phone (string)** User's phone number","**$cms->user->meta (object)** User's meta data"]},{"l":"Functions","p":["**$cms->user->can($permission) (boolean)** Returns true if user is granted $permission.","For users with edit_users permission:","$cms->user->create($email, $data) Creates a new user. $email is required. Returns user id if successful.","$data associative array or object with the following option parameters:","first User's first name","last User's last name","name User's publicly visible name (defaults to first + last name)","phone User's phone number","roles User's role. If omitted, registered will be the default role.","permissions Associative array or object with an include and exclude parameter. Use this exclusively to override granted/excluded permissions in the user's role.","include Array of permissions granted","exclude Array of permissions excluded","meta Associative array or object with custom meta data for the user in key / value pairs","$cms->user->delete($id) Deletes a specific user. The current user must have edit_users permission for this to work. Returns true if successful."]},{"l":"Methods","p":["$cms->user->logout() Ends the current user's session."]}],[{"l":"User Roles","p":["Edit roles can be done in /cms/config/roles.json.","The \"visitor\" role is the default role given to anonymous visitors to your website.","The \"registered\" role is the default role given to users registered through the cms_user_register() function;","The \"admin\" role is set by default giving full access to all features."]},{"l":"Default Config"},{"l":"Variables","p":["$cms->user->role: The current user role","$cms->user->permissions:"]},{"l":"Functions","p":["$cms->user->can('permission'): Returns true if user is granted the specified permission"]}]]